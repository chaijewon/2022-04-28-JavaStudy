import java.util.Arrays;

/*
 *   배열 : 같은 데이터를 여러개 모아서 관리 (구분 : 인덱스)
 *         고정적이다 (선언=>수정할 수 없다) => 데이터 추가 , 데이터 축소가 어렵다 
 *         인덱스번호 => 연속적으로 메모리 공간이 만들어진다 (처음부터 인덱스 => 0)
 *         *** 모든 프로그램 (변수 , 클래스)
 *                       -----  ------ 한개의 이름으로 제어 (인터페이스)
 *                        변수가 여러개면 프로그램을 제작하기 어렵다 (한개의 이름)
 *         *** 같은 종류 
 *         예) 3명의 국어,영어 수학
 *            int kor1,kor2,kor3;
 *            int eng1,eng2,eng3;
 *            int math1,math2,math3;
 *            int[] score=new int[9]; => 관리하기 어렵다 
 *            --------------------------------------
 *            int[] kor=new int[3]; => 0 1 2
 *            int[] eng=new int[3]; => 0 1 2
 *            int[] math=new int[3];=> 0 1 2
 *            ------------------------------- 
 *            한사람에 대한 정보를 묶어서 관리 
 *            class Student
 *            {
 *               int kor,eng,math;
 *            }
 *            => new를 이용하면 => 메모리 여러개에 저장이 가능 
 *        => 선언 방식
 *           데이터형[] 배열명; // 권장사항 
 *           데이터형 배열명[];
 *        => 초기값 주는 방식 
 *           데이터형[] 배열명={값,값....};
 *           데이터형[] 배열명=new 데이터형[5];
 *           
 *           int[] arr;
 *           arr=new int[5] ==> new (동적메모리 할당) 
 *                              ---- 메모리가 설정 => 값을 넘겨준다 (주소)
 *               ---- 자동 초기화 
 *                    int => 0
 *                    long => 0L
 *                    double => 0.0
 *                    String => null
 *                    boolean => false
 *           -------------------------------------------
 *            stack                  heap(실제 데이터 저장)
 *           -------------------------------------------
 *            arr       arr[0] arr[1] arr[2] arr[3] arr[4]
 *           ----       -----------------------------------
 *            100         0   |  0   |  100  |   0  |   0
 *           ----    arr-----------------------------------
 *                   100
 *                   
 *                   => 100에 저장된 2번째 값을 읽어 와라 
 *                      arr[1] => 일반 변수와 동일하게 취급 
 *                   => 100에 저장된 3번째 값을 100을 변경 
 *                      arr[2]=100;
 *            => 인덱스번호는 0번부터 시작한다 
 *            => 배열의 크기(저장된 갯수) => length
 *            => 배열에 들어가 있는 전체 데이터 출력 : Arrays.toString(배열명)
 */
// 정수 10개를 저장하고 초기값(1~100=>random()) => 출력 
public class 자바배열_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//int a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15;
		int[] arr=new int[10];
		// 0으로 초기화 
		for(int i=0;i<arr.length;i++)
		{
			arr[i]=(int)(Math.random()*100)+1;
		}
        // 출력 
		//System.out.println(Arrays.toString(arr));
	    for(int i:arr)
	    {
	    	System.out.print(i+" ");
	    }
	}

}






