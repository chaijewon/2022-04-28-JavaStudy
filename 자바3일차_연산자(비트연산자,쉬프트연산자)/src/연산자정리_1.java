/*
 *    연산자 (기본 문법 : 8장) => 반드시 책을 한번 보기
 *          => 기술면접 
 *    1. 87page 
 *       연산자의 종류 : 연산자는 다른 데이터형을 연산하면 큰데이터형이 결과로 나온다
 *                    char+int =int 
 *                    'A'+10 => 75
 *                    double+int = double
 *                     10.5+10 => 20.5
 *       ------------------------
 *         ++ , -- , ! => boolean만 사용이 가능, (type):형변환 
 *                               형변환 
 *                           ----------> upcasting
 *                  byte < char < int < long < float < double
 *                           <---------- downcasting
 *         전치/후치 
 *         --- ---
 *         전치 => 먼저 증가 나중에 다른 연산 수행 
 *         후치 => 먼저 다른 연산 수행 , 나중에 증가 
 *         int a=10;
 *         int b = ++a
 *                 --1
 *               --2
 *          => a=11,b=11
 *         int a=10;
 *         int b = a++
 *             ----- 1
 *                  --- 2
 *          => a=11 , b=11
 *          
 *          대입 , 증가 
 *          ====> 반복문에서 주로 사용 
 *          ==> 응용 (제어문) 
 *          for(int i=1;i<=10;i++)
 *          {
 *          
 *          }
 *         
 *       ------------------------
 *         + , - , * , / , %
 *         + : 기능이 두개 (산술,문자열 결합)
 *         / : 0으로 나눌 수 없다 
 *             정수/정수=정수 
 *         % : 나누고 나머지 
 *             ---------- 남는 값을 왼쪽편 부호가 남는다 
 *             5%2 = 1
 *             -5%2=-1
 *             5%-2 =1
 *             -5%-2=-1 => 윤년 계산 ...
 *       -----------------------------
 *         == , != , < , > , <= , >=
 *         => 조건문 / 반복문 => 결과가은 boolean(true/false)
 *         => 비교는 정수/문자/실수/논리(==,!=)
 *            문자열은 equals(),compare() => 정렬
 *            
 *       -----------------------------
 *         &&(AND)  , ||(OR)
 *         직렬        병렬 => 두개의 조건중에 1개이상 ture
 *         두개의 조건이 true일때만 true 
 *         
 *         효율적인 연산 
 *          false && () => 수행하지 않는다
 *          true || () => 수행하지 않는다 
 *       ------------------------------
 *         ?:
 *         (조건)?값1:값2
 *         -----
 *          true => 값1
 *          false => 값2
 *          
 *        instanceof => 객체 비교
 *        ~ (반전연산자 => 음수 표현)
 *        
 *        page 88
 *        연산순서 
 *        ------
 *         +,-,*,/,%
 *         
 *         5 + 6 * 10
 *             -------
 *                1
 *         -------
 *           2 
 *            =======> 65
 *            
 *      ---> 91page 
 *      단항연산자 <======  ++,--,!,(type)
 *      산술연산자 *,/,% => +,-
 *      비교연산자 < , > , <= , >= ==> ==, !=
 *      논리연산자 && , ||
 *      삼항연산자 
 *      대입연산자 
 *      --------------------- () 최우선 순위 
 *      
 *      ***92page
 *        long + int
 *               ---
 *               long ==> long+long=long
 *        double + long 
 *                 ----
 *                 double => double+double=double
 *        char + int 
 *        ----
 *        int =======> int+int=int
 *        
 *        int이하(byte,short,char)는 연산처리시 결과값 int
 *          byte+byte=int
 *          char+char=int 
 *          short+char=int
 *          
 *      93page 단항연산자 
 *       ++ : 무조건 1증가  (a++,++a)
 *       -- : 무조건 2감소  (a--,--a)
 *      94page 
 *           int a=10;
 *           int b = ++a 
 *                   --1
 *                 --2
 *           
 *           int a=10;
 *           int b = a++
 *                -- 1
 *                    -- 2
 *      97page 
 *           10/4=2 (정수/정수=정수) => 형변환 (데이터형이 섞이면 결과값
 *             가정 큰 데이터형값이 나온다)
 *      108page 
 *         % => 부호 
 *         
 *      109page  비교연산자  문자열은 비교 할 수 없다 
 *      112page => equals()
 *      
 *      114page 논리연산자
 *        && => 범위 포함 
 *        || => 범위 미포함 
 *        
 *      118page 효율적잉 연산 
 *      &&
 *      false 
 *      ||
 *      true 
 *      
 *      130page 
 *        삼항연산자 
 *        
 *        (조건) ? 값1:값2
 *        -----    |  |
 *          true   |  |
 *          false     |
 *      132page 
 *        대입연산자 
 *         = , += , -=
 */
import java.util.Scanner;
public class 연산자정리_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        // 년도를 입력 받아서 윤년여부 확인 
		// 예약 / 예매 => 달력 만들기 
		Scanner scan=new Scanner(System.in);
		System.out.print("년도 입력:");
		int year=scan.nextInt(); 
		/*
		 *  윤년 : 4년마다 
		 *        100년마다 제외
		 *        400년마다
		 *  => 로마시대(윤년 , 암호화(시저암호화)) 
		 */
		String result=((year%4==0 && year%100!=0)||(year%400==0))?"윤년":"평년";
		System.out.printf("%d 년도는 %s입니다\n",year,result);
	}

}







