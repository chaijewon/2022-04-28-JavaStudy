/*
 *   1. 변수의 종류
 *      클래스 영역에 선언 
 *      ==============
 *        **여러개의 데이터 한번에 변경 = 정규화
 *      = 공유변수 / 클래스변수(static) => 컴파일시에 한개의 메모리만 생성 
 *        => 자동으로 메모리에 저장 
 *        => 로고 / 데이터를 모아둔 것 (배열) 
 *        => 특별한 경우가 아닌면 거의 사용 빈도가 없다 
 *                              -------------- 공유 저장 장소 (오라클)
 *        => 객체를 한번만 사용할 경우 (싱글턴: static) => 스프링은 싱글턴 기본
 *        => 호출 
 *            객체명.변수명 
 *            클래스명.변수명
 *            => 확인 (클래스명.~)
 *            String s="aaa";
 *            s.substring()
 *            String.valueOf()
 *            Math.
 *            System.out 
 *            => 클래스명은 무조건 대문자 시작 
 *      = 인스턴스 변수 : 저장 (new) => 각각 다른 메모리가 생성 
 *                                     ========= 제어(메모리 주소)
 *                                       참조 변수 
 *                              => 10명의 학생 관리 
 *                              => 1. 학생 1명 설계 
 *                                 2. 메모리 공간을 10개 만든다 
 *                                 3. 메모리마다 다른 데이터 저장
 *                              => 
 *                                 int a=10
 *                                 int b=20
 *                                 int c=30
 *        => 호출 
 *           객체명.변수명 (객체명.메소드명)
 *                               
 *        클래스 ========> 인스턴스/객체
 *             메모리에 저장(인스턴스화) ===> new
 *        인스턴스가 생성 - 소멸 (생명주기)
 *        
 *        클래스 설계   =======> 메모리에 저장 ======> 활용 =====> 소멸
 *        = 변수(속성)         new 생성자()          c.변수명   c=null;
 *                                               c.메소명
 *        = 기능(동작,행위)         ---- 클래스명과 동일
 *        = 변수 초기화        Card c=new Card()
 *        
 *        예) 자판기 
 *           1. 동전(잔돈)
 *           2. 음료수 (캔) ==> +온음료 (상속)
 *           3. 동전 투입 
 *              음료수 선택 => 음료수/잔돈 
 *      
 *      메소드 영역에 선언 (메소드 => 사용자 요청시 처리 기능)
 *      ==============
 *      = 지역변수 : 요청 처리에 대한 변수 
 *      = 매개변수 : 사용자가 보내준 값 
 *        *** static은 사용할 수 없다 
 *        *** final은 사용이 가능 (상수)
 *      ============================ 메소드 안에서만 사용하는 변수 
 *      
 *      243
 *       => 클래스 => 사용자 정의 타입 
 *       => 프로그래머가 서로 관련된 변수를 묶어서 하나의 타입으로 새로 추가하는 것
 *                                      --------- 데이터형을 직접 만든어서 사용  
 *      246 변수 종류/ 선언위치 / 생성시기
 */
public class 멤버변수정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
